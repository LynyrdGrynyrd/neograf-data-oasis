version: '3.8'
services:
  rabbitmq:
    restart: unless-stopped
    image: rabbitmq:4
    container_name: nomad_oasis_rabbitmq
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - nomad_oasis_rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "--silent", "--quiet", "ping"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 10s

  elastic:
    restart: unless-stopped
    image: elasticsearch:7.17.24
    container_name: nomad_oasis_elastic
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - discovery.type=single-node
    volumes:
      - nomad_oasis_elastic:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://elastic:9200/_cat/health"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 60s

  mongo:
    restart: unless-stopped
    image: mongo:5
    container_name: nomad_oasis_mongo
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - nomad_oasis_mongo:/data/db
      - /volume1/docker/neograf-data-oasis/.volumes/mongo:/backup  # UPDATED PATH
    command: mongod --logpath=/dev/null
    healthcheck:
      test: ["CMD", "mongo", "mongo:27017/test", "--quiet", "--eval", "'db.runCommand({ping:1}).ok'"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 10s

  worker:
    restart: unless-stopped
    image: ghcr.io/lynyrdgrynyrd/neograf-data-oasis:main  # UPDATED IMAGE
    container_name: nomad_oasis_worker
    environment:
      NOMAD_SERVICE: nomad_oasis_worker
      NOMAD_RABBITMQ_HOST: rabbitmq
      NOMAD_ELASTIC_HOST: elastic
      NOMAD_MONGO_HOST: mongo
    depends_on:
      rabbitmq:
        condition: service_healthy
      elastic:
        condition: service_healthy
      mongo:
        condition: service_healthy
    volumes:
      # REMOVED: plugins volume (now built into image)
      # UPDATED: config path
      - /volume1/docker/neograf-data-oasis/configs/nomad.yaml:/app/nomad.yaml
      - /volume1/docker/neograf-data-oasis/.volumes/fs:/app/.volumes/fs  # UPDATED PATH
    command: ./run-worker.sh

  app:
    restart: unless-stopped
    image: ghcr.io/lynyrdgrynyrd/neograf-data-oasis:main  # UPDATED IMAGE
    container_name: nomad_oasis_app
    environment:
      NOMAD_SERVICE: nomad_oasis_app
      NOMAD_SERVICES_API_PORT: 8000
      NOMAD_FS_EXTERNAL_WORKING_DIRECTORY: /volume1/docker/neograf-data-oasis  # UPDATED PATH
      NOMAD_RABBITMQ_HOST: rabbitmq
      NOMAD_ELASTIC_HOST: elastic
      NOMAD_MONGO_HOST: mongo
      NOMAD_NORTH_HUB_HOST: north
    depends_on:
      rabbitmq:
        condition: service_healthy
      elastic:
        condition: service_healthy
      mongo:
        condition: service_healthy
    volumes:
      # REMOVED: plugins volume (now built into image)
      # UPDATED: config path
      - /volume1/docker/neograf-data-oasis/configs/nomad.yaml:/app/nomad.yaml
      - /volume1/docker/neograf-data-oasis/.volumes/fs:/app/.volumes/fs  # UPDATED PATH
    command: ./run.sh
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:8000/-/health"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 10s

  north:
    restart: unless-stopped
    image: ghcr.io/lynyrdgrynyrd/neograf-data-oasis/jupyter:main  # UPDATED IMAGE
    container_name: nomad_oasis_north
    environment:
      NOMAD_SERVICE: nomad_oasis_north
      NOMAD_NORTH_DOCKER_NETWORK: nomad_oasis_network
      NOMAD_NORTH_HUB_CONNECT_IP: north
      NOMAD_NORTH_HUB_IP: "0.0.0.0"
      NOMAD_NORTH_HUB_HOST: north
      NOMAD_SERVICES_API_HOST: app
      NOMAD_FS_EXTERNAL_WORKING_DIRECTORY: /volume1/docker/neograf-data-oasis  # UPDATED PATH
      NOMAD_RABBITMQ_HOST: rabbitmq
      NOMAD_ELASTIC_HOST: elastic
      NOMAD_MONGO_HOST: mongo
    depends_on:
      app:
        condition: service_healthy
    volumes:
      # UPDATED: config path
      - /volume1/docker/neograf-data-oasis/configs/nomad.yaml:/app/nomad.yaml
      - /volume1/docker/neograf-data-oasis/.volumes/fs:/app/.volumes/fs  # UPDATED PATH
      - /var/run/docker.sock:/var/run/docker.sock
    user: '1000:121'
    command: python -m nomad.cli admin run hub
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:8081/nomad-oasis/north/hub/health"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 10s

  proxy:
    restart: unless-stopped
    image: nginx:stable-alpine
    container_name: nomad_oasis_proxy
    command: nginx -g 'daemon off;'
    volumes:
      # UPDATED: config path (using HTTP config)
      - /volume1/docker/neograf-data-oasis/configs/nginx_http.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      app:
        condition: service_healthy
      worker:
        condition: service_started
      north:
        condition: service_healthy
    ports:
      - "8000:80"  # UPDATED PORT to match nomad.yaml config

volumes:
  nomad_oasis_mongo:
    name: "nomad_oasis_mongo"
  nomad_oasis_elastic:
    name: "nomad_oasis_elastic"
  nomad_oasis_rabbitmq:
    name: "nomad_oasis_rabbitmq"

networks:
  default:
    name: nomad_oasis_network